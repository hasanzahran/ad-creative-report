{"version":3,"sources":["utils/config.ts","components/Iframe.tsx","components/List.tsx","App.tsx","index.tsx"],"names":["MAIN_URL","fixData","data","tempItem","item","tempObj","width","height","src","srcWithQuotes","iframe_preview","match","substring","length","replace","push","Iframe","iframeData","className","map","iframe","index","title","frameBorder","style","left","List","useState","setData","loading","setLoading","ids","setIds","format","setFormat","setIframeData","getAllItems","a","fetch","getData","json","response","finalData","console","error","useEffect","then","showAds","join","iframeSrc","disabled","onClick","id","ad_id","backgroundImage","thumbnail","ad_name","spend","indexOf","includes","alert","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a8bb22f6.chunk.js","sourcesContent":["export const MAIN_URL = `https://platform.pearmill.com/tests`;\n\nexport const fixData = (data:any) => {\n    const tempItem:{}[] = [];\n    for (let item in data) {\n        let tempObj = {width: null,height:null,src:null};\n        let srcWithQuotes = data[item].iframe_preview.match(/src=([^\\s]*)\\s/)[1];\n        let width = data[item].iframe_preview.match(/width=([^\\s]*)\\s/)[1];\n        let height = data[item].iframe_preview.match(/height=([^\\s]*)\\s/)[1];\n        let src = srcWithQuotes.substring(1,srcWithQuotes.length - 1);\n        tempObj.width = width.substring(1,width.length - 1);\n        tempObj.height = height.substring(1,height.length - 1);\n        tempObj.src = src.replace(\"amp;\", \"\");\n        tempItem.push(tempObj);\n    }\n    return tempItem;\n}","import React from 'react';\n\nconst Iframe: React.FC<any> = ({iframeData}) => {\n\n    return (\n        <div className={\"iframe-container flex\"}>\n            {iframeData?.length > 0 && iframeData?.map((iframe: { width: string | number | undefined; height: string | number | undefined; src: string | undefined; }, index: any) => (\n                <div key={index + iframe.height} className={\"iframe-card\"}>\n                    <iframe title={`iframe_${index}`} width={iframe.width} height={iframe.height} src={iframe.src} frameBorder=\"0\" style={{left: iframe.width +'px'}} />\n                </div>\n            ))}\n        </div>\n    );\n\n}\n\nexport default Iframe;","import React, {useEffect, useState} from 'react';\nimport {fixData, MAIN_URL} from \"../utils/config\";\nimport Iframe from \"./Iframe\";\n\ntype dataType = {\n    ad_id: number,\n    ad_name: string,\n    spend: number,\n    thumbnail: string\n};\n\nconst List:React.FC = () => {\n    const [data, setData] = useState<dataType[]>([]);\n    const [loading, setLoading] = useState<boolean>(false);\n    const [ids, setIds] = useState<number[]>([]);\n    const [format, setFormat] = useState<string>(\"FACEBOOK_STORY_MOBILE\");\n    const [iframeData, setIframeData] = useState<{}[]>([]);\n\n    const getAllItems = async () => {\n        setLoading(true);\n        try {\n            const getData = await fetch(`${MAIN_URL}/creatives`);\n            let response  = await getData.json();\n            let finalData = await response.data;\n            setData(finalData);\n        } catch (err) {\n            console.error(err);\n        }\n    }\n\n    const addToList = (id:number)  => {\n        if(!ids.includes(id)) {\n            setIds(ids => [...ids, id]);\n        } else {\n            alert(\"This item is in the list\")\n        }\n    }\n\n    useEffect(() => {\n        getAllItems().then(() => setLoading(false));\n    },[]);\n\n    const showAds = async () => {\n        try {\n            const getData = await fetch(`${MAIN_URL}/iframes?ad_ids=${ids.join(\",\")}&format=${format}`);\n            let response  = await getData.json();\n            let iframeSrc = fixData(response.data);\n            setIframeData(iframeSrc);\n        } catch (err) {\n            console.error(err);\n        }\n    }\n\n    const clearData = () => {\n        setIframeData([]);\n        setIds([]);\n    }\n\n    return (\n        <>\n            <div className={\"flex btns\"}>\n                <button disabled={!ids.length} className={\"warning\"} onClick={clearData}>Clear data</button>\n                {iframeData.length === 0 && \n                    <div className={\"flex options-view\"}>\n                        <div className={`${format === \"FACEBOOK_STORY_MOBILE\" ? \"active\" : null}`} onClick={() => setFormat(\"FACEBOOK_STORY_MOBILE\")}>Story</div>\n                        <div className={`${format === \"MOBILE_FEED_STANDARD\" ? \"active\" : null}`} onClick={() => setFormat(\"MOBILE_FEED_STANDARD\")}>Mobile</div>\n                        <div className={`${format === \"DESKTOP_FEED_STANDARD\" ? \"active\" : null}`} onClick={() => setFormat(\"DESKTOP_FEED_STANDARD\")}>Desktop</div>\n                    </div>\n                }\n                <button disabled={!ids.length} className={\"success\"} onClick={showAds}>{`Show Adds (${ids.length})`}</button>\n            </div>\n            {!loading && \n            <div className={\"cards flex\"}>\n                {iframeData.length === 0 && data.length && data?.map((item, index) => (\n                    <div key={`ad_${item.ad_id + index}`} className={\"cards__item flex\"}>\n                        <div className={\"card flex\"} id={`ad_${item.ad_id}`}>\n                            <div className={\"card__image card__image--fence\"} style={{\n                                backgroundImage: `url(${item.thumbnail})`\n                            }}>\n                            </div>\n                            <div className={\"card__content flex\"}>\n                                <div className={\"card__title\"}>\n                                    {item.ad_name}\n                                </div>\n                                <p className={\"card__text\"}>Total spend: ${item.spend}</p>\n                                <button disabled={ids.indexOf(item.ad_id) !== -1} onClick={() => addToList(item.ad_id)} className=\"primary\">{`${ids.indexOf(item.ad_id) === -1 ? 'Add': 'Added'}`}</button>\n                            </div>\n                        </div>\n                    </div>\n                ))}\n            </div>\n            }\n            <Iframe iframeData={iframeData} />\n        </>\n    );\n};\n\nexport default List;","import List from \"./components/List\";\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <List />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/style.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}